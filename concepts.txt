               ▄▄                                              
▀████▀         ██                                              
  ██                                                           
  ██         ▀███     ▀████████▄     ▀███  ▀███     ▀██▀   ▀██▀
  ██           ██       ██    ██       ██    ██       ▀██ ▄█▀  
  ██     ▄     ██       ██    ██       ██    ██         ███    
  ██    ▄█     ██       ██    ██       ██    ██       ▄█▀ ██▄  
██████████   ▄████▄   ▄████  ████▄     ▀████▀███▄   ▄██▄   ▄██▄
                                                               
                                                               

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Users and Group Management 

Every Linux user have an account associated with it may also have a directory same as one's name under home directory. It also have a Unique ID and
a Group ID these GID and UID are used while creating and manipulating files. Similarly there are Groups in Linux which are just represent multiple 
users. For example if a new file is created by the user with group x all the member will be able to access that file.


Account in linux are mainly of 4 types ~


                                                                    Accounts types in linux
                                                                              |
                                                                              |
                                                -----------------------------------------------------------
                                                |                 |                    |                  |
                                                |                 |                    |                  |
                                           Super User      Servive Accounts      System Accounts     User Accounts 



1.Super Accounts ~ This account have all the powers and the permissions of the system this is mostly known as root it have an UID = 0.
2.Service Accounts ~ These account are used by services.
3.System Accounts ~ These accounts are used by the system they have an UID of <100 or 500-1000.
4.User Accounts ~ These are the accounts used by the user


Quick notes ~ 

* All the details of the user are stored in /etc/passwd file.
* When the user is added to the system all the files form /etc/skel are copied to new user home directory.
* The defaults of can be explored under /etc/login.defs or by typing command useradd --defaults
* All the global environment variable are found under /etc/environment can be used by the new user as well
* Scripts presented in the /etc/profile.d will be executed every time user logins 
* User's limits to the system resources can be set by manipulating the file /etc/limits.config 
* When the user is added to the system a new group is also created and added to the system(same name as of user's) aka primary Group
* When a user is added his home directory is also created under home/
* To login new user must have a passwd this can set by typing passwd USER-NAME
* User can login by typing su USER-NAME and later entering the set passwd 
* usermod is the command line utility to modify user account settings 
* chage is the command line utility to manage user password 
* userdel is used to delete user-accounts 
* useradd is used to add user-accounts   

Commands

👨🏽‍💻usage:To get to know about account which is logged into the system 
👨🏽‍💻type:whoami

👨🏽‍💻usage:To get to know about account which is logged last into the system 
👨🏽‍💻type:last

👨🏽‍💻usage:To add another user to the system normalally with default settings 
👨🏽‍💻type:useradd DESIRED-USER-NAME

👨🏽‍💻usage:To add another user to the system with custom settings 
👨🏽‍💻type:useradd -u CUSTOM-UID -g CUSTOM-GID -d /CUSTOM-DIRECTORY -s /bin/CUSTOM-SHELL -c "CUSTOM-COMMNETS" DESIRED-USER-NAME 

-u is used for giving custom UID to user example 69,420,1945,2002 aka user defined (--uid)
-g is used for giving custom GID to user example 69,420,1945,2002 aka user defined
-d is used for providing the custom home directory example /home/users/myselfakashagarwal (--home-dir)
-s is used for providing the default shell example /bin/bash, /bin/sh, /bin/zsh (--shell)
-c is used for custom comments 
-e is used for expiration date with format YEAR-MONTH-DAY
-G is used for creating a user with multiple secondary groups 
--system is used for adding system account 

👨🏽‍💻usage:To get user information
👨🏽‍💻type:id

👨🏽‍💻usage:To remove user from the system excluding its home directory 
👨🏽‍💻type:userdel DESIRED-USER-NAME 

👨🏽‍💻usage:To remove user from the system including its home directory 
👨🏽‍💻type:userdel --remove DESIRED-USER-NAME 

👨🏽‍💻usage: to change the home directory of the user 
👨🏽‍💻type: usermod -d /PATH-TO-NEW-HOME-DIRECTORY -m USERMANE
👨🏽‍💻Note:instead of -d --home can be used and for -m --move-home can be used 

👨🏽‍💻usage:To change user name 
👨🏽‍💻type:usermod --login NEW-USER-NAME OLD-USER-NAME
👨🏽‍💻Note:-l can can be used istead of --login

👨🏽‍💻usage:To change user login shell
👨🏽‍💻type:usermod --shell /bin/OTHER-SHELL USER-NAME 
👨🏽‍💻Note:-s can be used insted of --login 

👨🏽‍💻usage:To lock the account without delating it 
👨🏽‍💻type:usermod -L username 
👨🏽‍💻Note:Instead of -L --lock can be used 

👨🏽‍💻usage:To unlock the account 
👨🏽‍💻type: usermod --ulock USER-NAME 
👨🏽‍💻Note:Instead of --unlock -U can be used 

👨🏽‍💻usage:To setup account expiration date  
👨🏽‍💻type:usermod --expiredate YEAR-MONTH-DATE USERNAME 
👨🏽‍💻Note:instead of --expiredate -e can be used to disable expiration date use "" as the date 

👨🏽‍💻usage:To change the primary group of the user 
👨🏽‍💻type:usermod -g NEW-GROUP-NAME USER-NAME  
👨🏽‍💻Note: It is recommeded to use --gid insted of -g as G is used for changing secondary groups 

👨🏽‍💻usage:To change the expiration date of the user password 
👨🏽‍💻type:chage --lastday NUMBER-OF-DAYS USER-NAME 
👨🏽‍💻Note:Instead of --lastday -d can be used - can be user for never password expiration

👨🏽‍💻usage:To reset user password exery ndays 
👨🏽‍💻type:chage --maxdays NUMBER-OF-DAYS USER-NAME 
👨🏽‍💻Note:-M can be used insted of --maxdays

👨🏽‍💻usage:To view the date of the expiry date of the password 
👨🏽‍💻type:chage --list USER-NAME 
👨🏽‍💻Note:-l can be used insted of --list 

👨🏽‍💻usage:To create a group
👨🏽‍💻type:groupadd groupname 

👨🏽‍💻usage:To delete a group
👨🏽‍💻type:groupdel groupname 

👨🏽‍💻usage:To add a user to group
👨🏽‍💻type:gpasswd --add USER-NAME GROUP-NAME 
👨🏽‍💻note: -a can be used insted of --add 

👨🏽‍💻usage:To delete a user to group
👨🏽‍💻type:gpasswd --delete USER-NAME GROUP-NAME 
👨🏽‍💻note: -d can be used insted of --delete

👨🏽‍💻usage:To rename a group 
👨🏽‍💻type:groupmod --new-name NEW-NAME OLD-NAME 
👨🏽‍💻note: -n can be used 

👨🏽‍💻usage:To change the group id  
👨🏽‍💻type:groupmod --gid NEW-ID OLD-ID 

👨🏽‍💻usage:To get the limits information about the user 
👨🏽‍💻type:ulimit -a 

Limits ~
We can put limits on users what and how much resources they can use To set such kinda limits we cvan edit limits.config file 
Usually there are four fields limits can be seen using ulimit -a command printing the various flags the limits can be set from these flags
for example to set limit on max user processes type ulimit -u NUMBER-OF-DESIRED-PROCESSES

domain - FOR WHOM LIMITS ARE FOR 
For users just simply type the name 
For groups use @ before group name 
For everyone use * this can be used as default limitatiins userlimit can override * limits 

type - WHAT TYPE OF LIMITS ARE IMPOSED these are of three types 
hard - this limit cannot be overridden by any user 
soft - User can increase its limits  
dash - This specifies this is both hard limit and soft limit 

item - ON WHAT ITEM LINITS ARE IMPOSED 
There are variety of items for example nproc aka maximum number of processes a user can run in current session nproc maxlogins
fsize aka maximum filesize created per session the value is in kilobytes 
cpu aka muximum time cpu can be used the value is in minutes 

value - HOW MUCH RESOURCE IS PROVIDED 

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

File 

Types ~

There's a commom phrase in linux that everything is a file so it is necessary to get really handy on em' 


                                                                         Files 
                                                                           |
                                                                           |
                                  ------------------------------------------------------------------------------------ 
                                  |                                        |                                         |
                                  |                                        |                                         |
                              Regular                                   special                                   Directory
                                                                           |
                                                                           |
                                 ---------------------------------------------------------------------------------------
                                 |                    |                     |                     |                    | 
                                 |                    |                     |                     |                    |
                             Character              Block                 Links                Socket                Pipe
                                                                            |
                                                                            |
                                                            --------------------------------
                                                            |                              |
                                                            |                              |
                                                          Hard                            Soft    

File in linux are divided into 3 types 
1.Regular
2.Directory
3.Special

1.Regular files are the most basic files in linux they are data files or media files or scripts 

2.Directories are the files that store other files or directories 

3.Special files are further divided into 5 types 

3.1 Character files - these files represent devices under /dev that allows OS to communicate with IO devices   example - mouse

3.2 Block files - These files represent block devices under /dev a block device read from and write in block/chunk of data  example - hard disk, ram 

3.3 Links - these files are the way to associate two or more file name with same set of file data there are two types of links 

3.3.1 Hard Link - two or more files name that share the same block of data on a physical disk although they behave as a independent files deleting one 
link will delete the data 

3.3.2 Soft link - They act as pointers to another files deleting a soft link will not delete the actual file 
Soft link and hardlink 

File points to the inode and innode points to the group of data. There might be chances that one or more that one person wanna access same data 
but might lie in different directories in that case the one usual way is to copy all the data form orignal to source that will result in storage
blunder in that case links are highly useful one or more user can have access to same data without blundering the storage 

👨🏽‍💻usage:To create a hard link
👨🏽‍💻type:ln PATH_TO_OLD_DATA PATH_TO_NEW_LINK
👨🏽‍💻output:Link will be created but its hard manipulation of data on one side will not result in changes on both sides, talking about how it workds
both the names points to same inode, hardlink limitations are ~ Hard links can only be formed for files not directories, file system dependincy

Soft link points to the path to the file all the stuff for making soft link is almost same but with a difference of -s flag
to view the true path of the link created readlink command is used permissions of softlink are kinda useless 

3.4 Socket - These file enable communication between two processes 

3.5 named pipes - These files are allows one process as the input to another Data flow in pipe is unidirectional 

File types and their identifiers 

  |------------------------------------|
  |  File               | identifiers  |
  |  Directory          |    d         |
  |  Regular            |    -         |
  |  Link               |    l         |
  |  Socket             |    s         |
  |  Pipe               |    p         |
  |  Character device   |    c         |
  |------------------------------------|

Hierchy of Directories

                                                                          /(root)
                                                                             |
                                                                             |                                       
      ------------------------------------------------------------------------------------------------------------------------------------------ 
     |           |           |           |           |           |           |           |           |           |         |          |       |
     |           |           |           |           |           |           |           |           |           |         |          |       |
   /bin        /boot       /dev        /etc        /home(~)     /lib       /media       /mnt        /opt        /tmp      /usr       /var   /sbin


/bin ~ This file contains the basic executeable linux shell commands like ps chmod etc 
/boot ~ This directory contains the files related to system like boot loader, kernel and boot image etc.
/dev ~ This directory this directory contains the dvice files 
/etc ~ This directory contains the most important access control files like passwd sudoers profile.d environment limits.config etc 
/home ~ This directory contains the user home directory 
/lib ~ This directory contains the system libraries like java perl frameworks
/media ~ All the removable media that is being plugged shows in this directory media is mpunted automaticially
/mnt ~ mnt is used by system administrators to mount the files 
/opt ~ This directory is used to store third party softwares 
/tmp ~ This directory contains the temporary files 
/usr ~ This directory contains the user programs 
/var ~ This directory contains the variable files 
/sbin ~ This directory contains the system binaries 

There are two types of path one is relative path second is absolute path. Relative path is just path of file inside the currect working directory 
while absolute path include all the ancestors of the current working directory.

👨🏽‍💻usage:To check the file type 
👨🏽‍💻type:file FILENAME-INCLUDING-FILE-FORMAT-IF-PRESENT

👨🏽‍💻usage:To create a file 
👨🏽‍💻type:touch FILE-NAME.FILE-FORMAT

👨🏽‍💻usage:To go directly to home directory 
👨🏽‍💻type:     cd      cd ~      cd $HOME   

👨🏽‍💻usage:To check the current directory you are on 
👨🏽‍💻type:pwd

👨🏽‍💻usage:To list the content of current working directory
👨🏽‍💻type:ls
👨🏽‍💻note:Multiple options can be used with this command like l for long list a for mentioning hidden files r for reverse order example ls -la

👨🏽‍💻usage:To switch to another directory present in the current working directory 
👨🏽‍💻type:cd DIRECTORY-NAME

👨🏽‍💻usage:To switch to parent of the current working directory  to traverse back of the hiearchy
👨🏽‍💻type:cd ..

👨🏽‍💻usage:To create directory
👨🏽‍💻type:mkdir DIRECTORY-NAME-AS-PER-AS-YOUR-CHOICE

👨🏽‍💻usage:To delete directory
👨🏽‍💻type:rm -r DIRECTORY-NAME-YOU-WANNA-DELETE

👨🏽‍💻usage:To copy a file or directory
👨🏽‍💻type:cp loation of the file which is to be copied location of parent directory where it is to be copied 
👨🏽‍💻output:The file or dictory will be copied at the same time 
👨🏽‍💻example:cp a/b/c/d  /a/b/c/
👨🏽‍💻note: There might be a case when there are so much directory/file under the copying directory/file in that case -r can be used.

👨🏽‍💻usage:To move a file or directory
👨🏽‍💻type:mv loation of the file which is to be transfered location of parent directory where it is to be transfered
👨🏽‍💻output:The file or dictory will be moved at the same time 
👨🏽‍💻example:rmdir mv a/b/c/4  /1/2/3/
👨🏽‍💻note: If the both location are same but the file name is different in that case the moving file or directory will be renamed as per as second name

👨🏽‍💻usage:To view the meta data of the file 
👨🏽‍💻type:stat FILENAME.FILEFORMAT

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////